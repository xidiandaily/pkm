一种便捷的文档编写工具――txt2tags介绍
作者:池育龙  xidiandaily(at)gmail.com
%%date(%Y-%m-%d)

%!includeconf:config.t2t

---------------------
%!include: file_head.t2t
---------------------
%!include: change_log.t2t

+txt2tags介绍+

txt2tags是一个文本格式化和转换工具。他能够将带特定标记的纯文本文件转换成支持的任意一种目标格式。他的口号就是“ONE source, MULTI targets”。@@
例如使用''**bold**'' 和 ''//italic//'' 标记**粗体**内容和//斜体//内容，等到编写完成之后，转成所需要的文件格式和显示样式。@@
使用txt2tags一个最主要的优点是**抛开格式，专注内容，节省时间**，一次编写，多次受益,十分适合程序员用它来编写文档。@@
**下图列出了t2t格式的文本文件可以转换的目标格式，目前已经支持近18种输出格式**@@
[httpCOLONSLASHSLASHpic.yupoo.comSLASHxidiandaily_vSLASHCUU35GX9SLASHM3IcZ.jpg]

而且，使用txt2tags来编写文档，并不会限制文档的编写形式，因为几乎基本的文档要素，txt2tags已经支持了。比如说:文章头部（包括文档标题、作者、日期）、章节标题（带/不带编号）、段落、字体美化（**粗体**、//斜体//、__下划线__、--删除线--)、等宽字体（段落内等宽字体，段间等宽字体）、引用（代码块）、列表、表格、链接、图片等,使用txt2tags，你可以轻松地组织你的文档内容，剩下的事情，都可以交给 txt2tags 来帮你处理。@@

除了上面所说的优点以外，还有什么优点使得很多程序员选择txt2tags来作为文档编辑工具呢？这就要从程序员文档的特点讲起了。
+程序员文档特点+
对于一个程序员来说，一个理想的文档工具最好具备以下的几个特点：
- 能够便捷地进行版本管理，能够方便地比较每个版本之间的异同；
- 内容和显示格式分离，多次复制、粘贴、修改之后都不会造成显示格式错乱；
- 能够方便地将文档输出成多种文件格式，每次转换不需要花大量时间进行调整；@@
- 文档支持 grep,cat,sed 等shell命令对其进行检索，修改，便于对文档的批量修改和自动化管理；
- 编写过程中更少的鼠标操作，提高编写效率。


@@
将文档编写内容和显示样式分离开来。编写文档时，要么专注内容，要么专注显示样式，这样才能提高文档的编写效率。就像HTML关注内容，CSS关注显示格式一样。我们在编写文档的时候，应该先集中精力将内容写好，而不是在编写的时候就因为调整显示格式而耗费了大量精力。如果使用类似 word 这些所见即所得的编辑工具，我们在编写文章时，在反复修改内容的时候很容易造成显示格式的错乱，比如说上下文显示序号不一致，前后粗体显示的字号不同，而且我们又不得不耗费大量的精力和时间来修改这些错误。这些毫无意义的时间损耗，在使用txt2tags的时候，是完全可以避免。比如说带序号的标题，我们在txt2tag中使用“''+一级标题+''”、“''++二级标题++''”这样的标记，只需要写好标题内容、确定标题位置，其他都不需要再操心了：**标题的具体序号，txt2tags在转换的时候会自动分配，标题的具体显示的字体、字号，完全交由CSS来控制（假设转换的目标文件是html文件）**。@@
同样的事情，对于序号来说也一样，使用“''- 一级序号''”、“''[space] - 二级序号''”这样的标记，具体的序列符号，在转换时候txt2tags会自动分配，完全不需要文档编辑者操心了。@@
另外，对文档的版本进行有效地管理，也是我们所关心的一个很重要的方面。一篇文章，在写好之后，完全不需要修改，不需要继续完善是不可能的。例如，很多年前的一篇C++介绍文档，在现在，有可能需要增加最新的C11内容，又例如，一篇写完的文章中发现了错误，在接下来的发表之前，肯定需要先纠正错误。这些各种各样的需求，其实就是我们对**文档版本管理**的需求。如果我们使用例如 word 这种所见即所得的编辑器来写文档的话，对文档进行版本管理将是一个噩梦。一个 word 文档经过了10次的修改之后，如果要将其中第5次修改撤销掉，这个工作难度非常大，而且很容易出错。之所以困难，一方面是由于word对文件比较支持不够友好，另一方面，也是word对版本管理支持不够友好造成的。而使用txt2tags，文档的版本管理会非常方便，对于编程人员也没有任何附加的学习成本。因为txt2tag本身就是文本文件，和我们的C++、php源码没什么区别，对各种版本管理工具、文本对比工具天然友好。@@
正因为txt2tags存储格式是文本形式，因此对命令行工具天然支持，因此很多工作做起来会非常方便。比如说，像需求“将所有文档中的boyaa改成BOYAA”，我们使用使用命令''find -name "*.t2t" -exec perl -pi.bak -e "s/boyaa/BOYAA/" {} \;''就可以搞定。即使我们这个文件夹下有1000个文档，也几乎不需要耗费什么工作时间。但如果是1000个word文档，我还真想不出什么快速有效的替换方法了 ;-)。@@
同样道理，对于像“在所有的文档头中，都加上boyaa的版权标记”，这样的需求，我们做起来也毫无压力，因为txt2tags支持命令行。@@


+学习txt2tags+
那么，既然txt2tags这么有用，我们学习和使用它，是否需要增加很多学习成本呢？其实不会，因为它足够简单。和其他标记语言相比，txt2tags几乎接近于自然语言，每个文章元素，仅只有一种标记方法，对于常用的文档，仅需掌握：文章头部、章节标题、字体美化、列表、表格 这几个标记就足以写出一篇文章了。而且这些标记几乎用过一次之后就会记住，学习成本非常低。@@
另外，因为txt2tags的本质是一个python脚本，这个脚本在任何安装了python工作环境的机器下都可以正常工作，比如说：windows、linux、Mac。所以，只要你掌握了这种标记语言，在任何一种工作环境下，均可以方便使用。如果有需要，我们也可以修改他，来满足我们自己的特殊需求。@@

**txt2tags常用标记列表（为了美观，这里仅列出标记，而不列出效果）**
|| 元素 | 标记（显示效果（略）） |
| 标题 | ''= 第一级标题 =''@@ ''==第二级标题==''@@''===第三集标题==='' |
| 带序号标题 | ''+ 第一级标题 +''@@ ''++第二级标题++''@@''+++第三集标题+++'' |
| 自然段 | 每个自然段一行，一个空行会另起自然段 |
| 文档注释 | ''%注释，txt2tags转换时候会忽略掉这个标记引领的一行'' |
| 文本美化 | ''**加粗**''、''//斜体//''、''__下划线__''、''''等宽字体'''' |
| 列表 | ''- 使用减号引导''、''[空格]- 二级列表在一级列表下面加空格和减号引导'' |
| 带序号列表 | ''+ 使用加号引导''、''[空格]+ 二级列表在一级列表下面加空格和加号引导'' |
| 区域 | [TAB]制表符引导的段落，会形成引用语、''```'' 上下两个三反引号之间的内容为完全引用(此处可以防止代码块) |
| 表格 | ''|| 表头 | 表头2 || @@ | 表格 | 表格2 | @@ | 还是表格1 | 还是表格2 |''@@ @@使用"''|''"分割可以得到表格，可以包括表头、表格 |
| 图片 | ''[t2t.png]''：使用两个中括号括住图片名称可以在文中插入图片,图片位置可以选择靠左，靠右，居中三个位置 |
| 链接 | ''[文字链接 www.txt2tags.org]'':可以产生一个链接 |


从上面的表格可以看到，很多文当元素的标记都是很简单易记的。除了上述标记以外，txt2tags其实还提供有更多的标记：例如自动替换生成的时间，根据目标格式不同，产生不同的样式，在转换前/后会自动执行批量修改命令等，这些都是很有意思的功能，有兴趣的同学不妨深入了解一下。

+建议的编辑环境+
编写txt2tags文档十分简单，你可以使用任意的文本编辑工具都可以。不过正如要达到**编写过程中更少的鼠标操作**的话，我建议的编辑工具是VIM。另外，txt2tags的官网上，也可以找到志愿者贡献的txt2tags语法高亮插件，编译支持插件，使得txt2tags文档编写过程更加愉快。@@

+实例+

+扩展阅读+
有兴趣的同学，可以通过下面的链接，更加深入地了解txt2tags工具，自从我使用txt2tags以来，获益许多，希望你们也能喜欢上这个工具。@@
''[txt2tag标记示例(中文)――周琦(Zoom Quiet) http://txt2tags.org/zh/markup-zh.html]'' @@
''[txt2tags在线使用示范  http://txt2tags.org/online.php]'' @@
''[txt2tags使用说明(官方中文版) http://txt2tags.org/docs.html]'' @@
''[]'' @@



