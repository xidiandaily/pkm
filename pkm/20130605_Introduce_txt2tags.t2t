一种便捷的文档编写语言――txt2tags介绍
作者:池育龙  xidiandaily(at)gmail.com
%%date(%Y-%m-%d)

%!includeconf:config.t2t

---------------------
%!include: file_head.t2t
---------------------
%!include: change_log.t2t

+程序员文档特点+
	文档应该是内容和格式分离的，就像HTML关注内容，CSS关注格式一样。我们在编写文档的时候，应该集中精力将内容写好，而不是在编写的时候就因为调整显示格式而耗费了大量精力。
一个理想的文档工具应该具备以下的几个特点：
+ 能够便捷地进行版本管理，能够方便地比较每个版本之间的异同；@@
  需求星级:p0@@
  一篇文章，在写好之后，我们肯定希望它能够根据时间的发展，逐渐地进行完善。比如说，我们希望能够在多年以前的一篇介绍 C++ 发展的文章中，添加最新的C11的内容。又或者，能够在一篇已经写完的文章中，删除/修改文章中的错误内容。又或者，能够根据面对的不同读者，对内容进行适当的适配。 @@
  这些工作，都是建立在可靠的版本管理的基础上的。我们希望文章的管理方式，能够像源码的修改那样，有一份正式的版本，能够在上面不停地添加内容，修改内容，又能够撤销修改，最重要的是，这些操作都不至于造成对文档管理的失控。如果像使用重命名的方式来管理文档那样，很容易造成版本管理的失控：在一大推似是而非的文章中，根本找不到自己想要的内容。
+ 显示格式可控，不会在多次复制、粘贴、修改之后造成显示格式错乱；@@
  需求星级:p1@@
  文档写作中，常用要素无非是以下几种:标题、列表、斜体、下划线、表格、图片、代码、链接、正文。我们在写作的阶段，只需要几种精力将前面的几个要素组织好就行，至于这几种元素，在显示时候是什么样子，暂时先不考虑。我们的目标是**内容和格式分离**，在写作时候，我们只需要知道哪些字会加粗，但是具体加粗到几号字，这个我们可以在等到文档编写完成之后,再进行调整。@@
  我们如果在编写的时候，就是试图将内容和显示格式同时调整，其工作量是很难把控的，尤其在反复修改的时候，很容易造成格式错乱。 比如说文章前后的加粗文字显示不一致，表格显示不统一，文章序号显示错误，然后我们不得不耗费时间和力量去找出这些不一致的地方，一一改正。@@
  为什么要这么麻烦呢？我们修改一下流程，先写文章内容，定好那些是标题，那些是序号，那些需要加粗，然后在修改完成之后，再统一调整，这样岂不是更好。@@
+ 能够方便地将文档输出成多种文件格式，html、word、dokuwiki，google wiki。输出的时候不需要花大量时间进行调整；@@
  需求星级:p3@@
+ 文档支持 grep,cat,sed 等shell命令对其进行检索，修改，便于对文档的自动化修改；@@
  需求星级:p4@@
+ 编写过程中更少的鼠标操作，提高编写效率。@@
  需求星级:p5@@



+txt2tags介绍+
	ONE source, MULTI targets
txt2tags是一个文本格式化和转换工具，也可以认为它是一种轻量标记语言。他能够将带特定标记的纯文本文件转换成支持的任意一种目标格式。例如使用''**bold**'' 和 ''//italic//'' 标记粗体内容和斜体内容，等到编写完成之后，转成所需要的文件格式。使用txt2tags一个最主要的优点是**抛开格式，专注内容，节省时间**，一次编写，多次受益。@@
目前txt2tags支持的文档元素:文章头部（包括文档标题、作者、日期）、章节标题（带/不带编号）、段落、字体美化（**粗体**、//斜体//、__下划线__、--删除线--)、等宽字体（段落内）、引用（代码块）、列表、表格、链接、图片等 几乎编写文档时候所需要的文档元素已经完全包含在内了,使用txt2tags，你可以轻松地组织你的文档内容，剩下的事情，都可以交给 txt2tags 来帮你处理。@@

+建议的编辑环境+

+实例+

+附录+
